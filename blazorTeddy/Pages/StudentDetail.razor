@page "/StudentDetail/{id:int}"

@using TeddyBlazor.Services
@using TeddyBlazor.Models
@using TeddyBlazor.Components
@using TeddyBlazor.ViewModels

@inject IRefreshService refreshService
@inject StudentDetailViewModel vm

<div class="maincanvas">
    <h1>@vm.Student.StudentName</h1>
    <br />
    
    <StudentNoteComponent vm="@vm" 
                          ReloadParent="@Reload"/>
    <br />
    <h3>Restrictions:</h3>
    <ul class="jumbotron centered">
        @foreach (var restriction in vm.GetRestrictions())
        {
            <li>@restriction</li>
        }
    </ul>

    <input type="number"
           @bind="vm.NewRestrictionId" />
    <button class="btn btn-secondary"
            type="submit"
            @onclick="(() => runAndReloadAsync(async () => await vm.AddRestrictionAsync()))">
        Add Restriction
    </button>
</div>

@code {
    [Parameter]
    public int id { get; set; }

    public Action Reload { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await vm.LoadStudentAsync(id);
    }

    protected override void OnInitialized()
    {
        Reload = () => this.StateHasChanged();

    }

    private async Task runAndReloadAsync(Action action)
    {
        await Task.Run(action);
        await vm.LoadStudentAsync(id);
        Reload();
    }
}