@page "/StudentDetail/{id:int}"

@using TeddyBlazor.Services
@using TeddyBlazor.Models
@using TeddyBlazor.Components
@using TeddyBlazor.ViewModels

@inject StudentDetailViewModel vm

<AuthorizeView>
    <Authorized>

        <div class="top-row px-4" style="background-color: lightslategray;">
        </div>

        <div class="jumbotron centered">
            <div class="maincanvas">

                <h1>@vm.Student.StudentName</h1>
                <br />

                <StudentNoteComponent vm="@vm" />
                <br />
                <h3>Restrictions:</h3>
                <ul class="jumbotron centered">
                    @foreach (var restriction in vm.Restrictions)
                    {
                        <li>@restriction</li>
                    }
                </ul>

                <input type="number"
                       @bind="vm.NewRestrictionId" />
                <button class="btn btn-secondary"
                        type="submit"
                        @onclick="vm.AddRestriction">
                    Add Restriction
                </button>
            </div>

        </div>

    </Authorized>

        <NotAuthorized>

        <div class="top-row px-4" style="background-color: lightslategray;">
        </div>

        <LoginDisplay2 />
    </NotAuthorized>

</AuthorizeView>

@code {
    [Parameter]
    public int id { get; set; }

    public Action Reload { get; set; }

    protected override void OnInitialized()
    {
        Reload = () => this.StateHasChanged();

    }

    private void runAndReload(Func<Task> action)
    {
        var task = Task.Run(async () =>
        {
            await Task.Run(action);
            await vm.LoadStudentAsync(id);
        });
        task.Wait();
        Reload();
    }

    // protected override void OnInitialized()
    // {
    //     vm.OnInitialized();
    // }
    protected override async Task OnInitializedAsync()
    {
        await vm.OnInitializedAsync();
    }
    protected override void OnParametersSet()
    {
        vm.OnParametersSet();
    }
    protected override async Task OnParametersSetAsync()
    {
        vm.StudentId = id;
        await vm.OnParametersSetAsync();
    }
}
