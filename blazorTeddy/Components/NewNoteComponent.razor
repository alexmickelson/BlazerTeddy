@using TeddyBlazor.Models
@using TeddyBlazor.Components
@using TeddyBlazor.ViewModels
@using TeddyBlazor.Services

@inject NewNoteViewModel vm


<input type="text"
        placeholder="New Note"
        @bind="vm.Note.Content" />
<button class="btn btn-secondary"
        type="submit"
        @onclick="(() => runAndReloadAsync(async () => await vm.AddNoteAsync()))">
    Add Note
</button>
<br />
<input type="checkbox" 
    @bind-value="vm.IsAnonymousNote" 
    @bind-value:event="oninput"/>
    Dont sign it
<select>
    <option value="0" selected disabled hidden>Note Type</option>
    @foreach (var option in vm.GetNoteTypeOptions())
    {
        <option value="@option.Item1">@option.Item2</option>
    }
</select> 
<div class="text-danger">@vm.errorAlert</div>

@code {

    [Parameter]
    public Student student { get; set; }

    protected override void OnParametersSet()
    {
        vm.Student = student;
    }

    private async Task runAndReloadAsync(Action action)
    {
        await Task.Run(action);
    }

}