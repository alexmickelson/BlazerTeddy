@using TeddyBlazor.Models
@using TeddyBlazor.Services
@using TeddyBlazor.ViewModels

@inject StudentListViewModel vm

<AuthorizeView>
    <Authorized>

        <div style="padding: 1rem">
            <h3 >StudentList</h3>

            <input type="text" placeholder="Search"
                   @bind-value="vm.NameFilter"
                   @bind-value:event="oninput" />
            <select @bind-value="vm.ClassIdFilter"
                    @bind-value:event="oninput">
                <option value="-1">Class</option>
                @foreach (var option in vm.GetClassOptions())
                {
                    <option value="@option.ClassId">@option.ClassName</option>
                }
            </select>

            @foreach (var student in vm.GetFilteredStudents())
            {
                <div class="nav-item px-3 ">
                    <a class="nav-link " href="/StudentDetail/@student.StudentId"><span class="oi oi-person" aria-hidden="true"></span><span>@student.StudentName</span></a>
                </div>
            }

        </div>
        
    </Authorized>

</AuthorizeView>




        @code {

            protected override void OnInitialized()
            {
                vm.OnInitialized();
            }
            protected override async Task OnInitializedAsync()
            {
                await vm.OnInitializedAsync();
            }
            protected override void OnParametersSet()
            {
                vm.OnParametersSet();
            }
            protected override async Task OnParametersSetAsync()
            {
                await vm.OnParametersSetAsync();
            }
        }
